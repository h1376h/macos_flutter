name: Test CI

# This workflow is triggered on pushes to the repository.
on:
  push:
    branches:
    - main
    
jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
    
    # Setup Java environment in order to build the Android app.
    - uses: actions/checkout@v4.0.0
    - uses: actions/setup-java@v3.11.0
      with:
        java-version: 11
        distribution: temurin
    
    # Setup the flutter environment.
    - uses: subosito/flutter-action@v2.10.0
      with:
        channel: 'beta' # 'dev', 'alpha', default to: 'stable'
        cache: true
        # flutter-version: '1.22.x' # you can also specify exact version of flutter
    
    # Moving key.properties
    - run: mv android/github-key.properties android/key.properties
    
    # Get flutter dependencies.
    - run: flutter pub get
    
    # Check for any formatting issues in the code.
    - run: dart format .
    
    # Statically analyze the Dart code for any errors.
    - run: flutter analyze .
    
    # Build apk.
    - run: flutter build apk --split-per-abi
    
    # Upload generated apk to the artifacts.
    #- uses: actions/upload-artifact@v3
    #  with:
    #    name: release-apk
    #    path: build/app/outputs/apk/release/app-arm64-v8a-release.apk
    
    - uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          ${{ github.actor }} created commit:
          Commit message: ${{ github.event.commits[0].message }}
            
          Repository: ${{ github.repository }}
            
          See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
          
    - name: not a release
      uses: appleboy/telegram-action@master
      if: ${{ !contains(github.event.head_commit.message, 'release') }}
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: arm64-v8a-release
        document: './build/app/outputs/apk/release/app-arm64-v8a-release.apk'
    
    - uses: appleboy/telegram-action@master
      if: contains(github.event.head_commit.message, 'release')
      with:
        to: ${{ secrets.TELEGRAM_GROUP }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          ${{ github.event.commits[0].message }}
            
          Changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
    
    - uses: appleboy/telegram-action@master
      if: contains(github.event.head_commit.message, 'release')
      with:
        to: ${{ secrets.TELEGRAM_GROUP }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: arm64-v8a-release
        document: './build/app/outputs/apk/release/app-arm64-v8a-release.apk'
       
    - uses: appleboy/telegram-action@master
      if: contains(github.event.head_commit.message, 'release')
      with:
        to: ${{ secrets.TELEGRAM_GROUP }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: armeabi-v7a-release
        document: './build/app/outputs/apk/release/app-armeabi-v7a-release.apk'
    
    - uses: appleboy/telegram-action@master
      if: contains(github.event.head_commit.message, 'release')
      with:
        to: ${{ secrets.TELEGRAM_GROUP }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: x86_64-release
        document: './build/app/outputs/apk/release/app-x86_64-release.apk'
       
    # Build web output.
    - if: contains(github.event.head_commit.message, 'release')
      run: flutter build web
      
    # Make Web.zip
    - uses: vimtor/action-zip@v1
      if: contains(github.event.head_commit.message, 'release')
      with:
        files: build/web/
        recursive: true
        dest: Web.zip
          
    # Upload Web.zip to telegram's group
    - uses: appleboy/telegram-action@master
      if: contains(github.event.head_commit.message, 'release')
      with:
        to: ${{ secrets.TELEGRAM_GROUP }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: Web
        document: './Web.zip'
          
    # Building linux output
    - if: contains(github.event.head_commit.message, 'release')
      run: |
       sudo apt-get update -y
       sudo apt-get install -y ninja-build pkg-config libgtk-3-dev liblzma-dev
       sudo apt-get install -y libsecret-1-dev libjsoncpp-dev libsecret-1-0
       flutter build linux
      
    - if: contains(github.event.head_commit.message, 'release')
      # Make Linux.tar.gz
      run: tar czf $GITHUB_WORKSPACE/Test.tar.gz *
      working-directory: build/linux/x64/release/bundle
        
    # Upload Test.tar.gz to telegram's group
    - uses: appleboy/telegram-action@master
      if: contains(github.event.head_commit.message, 'release')
      with:
        to: ${{ secrets.TELEGRAM_GROUP }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: Linux x64
        document: './Test.tar.gz'
